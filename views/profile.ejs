<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Profile</title>
  <style>
    body {
      margin: 0;
      background: #f5f6fa;
    }

    .body {
      font-family: Arial, sans-serif;
      background: #f5f6fa;
      margin: 0;
      padding: 20px;
    }

    .profile-container {
      max-width: 900px;
      margin: auto;
    }

    .profile-header {
      display: flex;
      align-items: center;
      gap: 20px;
      margin-bottom: 30px;
      background: #fff;
      padding: 20px;
      border-radius: 15px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .profile-header img {
      width: 120px;
      height: 120px;
      border-radius: 50%;
      object-fit: cover;
      border: 3px solid #3498db;
    }

    .profile-info h2 {
      margin: 0;
      font-size: 24px;
      color: #333;
    }

    .edit-btn {
      background: #3498db;
      color: white;
      border: none;
      padding: 10px 18px;
      border-radius: 8px;
      cursor: pointer;
      transition: background 0.3s;
    }

    .edit-btn:hover {
      background: #2980b9;
    }

    /* Section Titles */
    h3 {
      margin: 20px 0 10px;
      color: #444;
    }

    /* Gallery & Albums Grid */
    .grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
      gap: 15px;
    }

    .grid img {
      width: 100%;
      border-radius: 10px;
      object-fit: cover;
      height: 150px;
      box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1);
    }

    .album-card {
      background: #fff;
      border-radius: 10px;
      padding: 10px;
      text-align: center;
      box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s;
    }

    .album-card:hover {
      transform: translateY(-5px);
    }

    .album-card img {
      width: 100%;
      height: 120px;
      border-radius: 8px;
      object-fit: cover;
      margin-bottom: 8px;
    }

    /* Edit Profile Modal */
    .modal {
      display: none;
      position: fixed;
      z-index: 1000;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      justify-content: center;
      align-items: center;
    }

    .modal-content {
      background: #fff;
      padding: 20px;
      border-radius: 12px;
      width: 100%;
      max-width: 400px;
    }

    .modal-content h3 {
      margin-top: 0;
    }

    .modal-content .form-group {
      margin-bottom: 15px;
    }

    .modal-content input[type="text"],
    .modal-content input[type="file"] {
      width: 100%;
      padding: 8px;
      border-radius: 8px;
      border: 1px solid #ccc;
    }

    .modal-content .modal-actions {
      text-align: right;
      margin-top: 15px;
    }

    .save-btn {
      background: #27ae60;
      color: white;
      border: none;
      padding: 8px 15px;
      border-radius: 8px;
      cursor: pointer;
    }

    .cancel-btn {
      background: #e74c3c;
      color: white;
      border: none;
      padding: 8px 15px;
      border-radius: 8px;
      cursor: pointer;
      margin-right: 8px;
    }

    @media (max-width: 600px) {
      .profile-header {
        flex-direction: column;
        align-items: flex-start;
      }

      .profile-header img {
        margin-bottom: 10px;
      }
    }

    .select-thumb.selected {
      border-color: #3498db;
      transform: translateY(-3px);
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.12);
    }

    /* gallery item title: one line ellipsis */
    .grid .album-card p.card-title {
      margin: 8px 0 0;
      font-size: 14px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    /* album card title (links): max 2 lines */
    .grid a.album-card p.card-title {
      margin: 8px 0 0;
      font-size: 14px;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
      line-height: 1.2;
      max-height: calc(1.2em * 2);
    }

    .delete-btn {
      background: #e74c3c;
      color: white;
      border: none;
      padding: 8px 15px;
      border-radius: 8px;
      cursor: pointer;
    }

    .delete-btn:hover {
      background: #c0392b;
    }
  </style>
</head>

<body>

  <%- include('partials/header') %>

    <div class="body">
      <div class="profile-container">
        <!-- Profile Header -->
        <div class="profile-header">
          <div class="profile-avatar">
            <img
              src="<%= (user && user.profilePic && user.profilePic.fileId)
                    ? '/files/' + user.profilePic.fileId
                    : (user && user.profilePic && (user.profilePic.imageUrl || ('/uploads/' + user.profilePic.filename))) || '/images/default-avatar.png' %>"
              alt="avatar" style="width:120px;height:120px;border-radius:50%;object-fit:cover;" />
          </div>
          <div class="profile-info">
            <h1>
              <%= (user && (user.name || user.username || user.email)) || 'Unnamed' %>
            </h1>
            <button class="edit-btn" id="editBtn">Edit Profile</button>
          </div>
        </div>

        <!-- Gallery -->
        <h3>Gallery</h3>
        <div class="grid">
          <% if (Array.isArray(gallery) && gallery.length> 0) { %>
            <% gallery.forEach(img=> { %>
              <div class="album-card">
                <a href="/image/<%= img._id || img.id %>">
                  <img src="<%= img.fileId
                               ? '/files/' + img.fileId
                               : (img.imageUrl || ('/uploads/' + img.filename)) %>"
                    alt="<%= img.title || img.originalname || img.filename || 'image' %>" loading="lazy" />
                </a>
                <p class="card-title">
                  <%= img.title || img.originalname || img.filename || 'image' %>
                </p>
              </div>
              <% }) %>
                <% } else { %>
                  <p>No images uploaded yet.</p>
                  <% } %>
        </div>

        <!-- Albums -->
        <h3>Albums</h3>
        <div class="grid">
          <% if (albums.length> 0) { %>
            <% albums.forEach(album=> { %>
              <a class="album-card" href="/album/<%= album._id %>">
                <img src="<%= (album.images && album.images[0] && album.images[0].fileId)
                               ? '/files/' + album.images[0].fileId
                               : (album.images && album.images[0]
                                   ? (album.images[0].imageUrl || ('/uploads/' + album.images[0].filename))
                                   : (album.cover
                                        ? (album.cover.startsWith('/') ? album.cover : '/uploads/' + album.cover)
                                        : '/images/default-cover.jpg')) %>" alt="<%= album.title || 'Album' %>">
                <p class="card-title">
                  <%= album.title %>
                </p>
              </a>
              <% }) %>
                <% } else { %>
                  <p>No albums created yet.</p>
                  <% } %>
        </div>
      </div>

      <!-- Edit Profile Modal -->
      <div class="modal" id="editModal">
        <div class="modal-content">
          <h3>Edit Profile</h3>
          <form id="profileForm" action="/api/users/profile" method="POST" enctype="multipart/form-data"
            onsubmit="event.preventDefault(); submitProfile(this);">
            <input type="hidden" name="_method" value="PATCH">
            <div class="form-group">
              <label for="name">Name</label>
              <input id="name" name="name" type="text" value="<%= (user && (user.name || user.username)) || '' %>" />
            </div>

            <div class="form-group">
              <label for="profileImage">Profile Image</label>

              <div class="select-gallery" style="display:flex;gap:8px;flex-wrap:wrap;margin-top:8px;">
                <% if (Array.isArray(gallery) && gallery.length> 0) { %>
                  <% gallery.forEach(img=> { %>
                    <div class="select-thumb" data-id="<%= img._id %>"
                      style="width:80px;cursor:pointer;border-radius:8px;overflow:hidden;border:2px solid transparent;">
                      <img src="<%= img.fileId
                                   ? '/files/' + img.fileId
                                   : (img.imageUrl || ('/uploads/' + img.filename)) %>"
                        alt="<%= img.title || img.originalname %>"
                        style="width:100%;height:80px;object-fit:cover;display:block;">
                    </div>
                    <% }) %>
                      <% } else { %>
                        <p>No images available. Upload images first.</p>
                        <% } %>
              </div>

              <input type="hidden" name="profileImageId" id="profileImageId" value="">
            </div>

            <div class="modal-actions" style="display:flex;justify-content:space-between;align-items:center;">
              <!-- ใช้ปุ่มเรียก API แบบ fetch แทน form ซ้อน form -->
              <button id="deleteProfileBtn" type="button" class="delete-btn">🗑 Delete Profile</button>

              <div>
                <button type="button" class="cancel-btn" id="cancelBtn">Cancel</button>
                <button type="submit" class="save-btn">Save</button>
              </div>
            </div>
        </div>
        </form>
      </div>
      </form>
    </div>
    </div>
    </div>

    <script>
      const editBtn = document.getElementById("editBtn");
      const editModal = document.getElementById("editModal");
      const cancelBtn = document.getElementById("cancelBtn");

      editBtn.addEventListener("click", () => {
        editModal.style.display = "flex";
      });

      cancelBtn.addEventListener("click", () => {
        editModal.style.display = "none";
      });

      // ปิด modal ถ้าคลิกนอกกล่อง
      window.addEventListener("click", (e) => {
        if (e.target === editModal) {
          editModal.style.display = "none";
        }
      });

      (function () {
        const thumbs = document.querySelectorAll('.select-thumb');
        const input = document.getElementById('profileImageId');
        thumbs.forEach(t => t.addEventListener('click', () => {
          thumbs.forEach(x => x.classList.remove('selected'));
          t.classList.add('selected');
          input.value = t.getAttribute('data-id') || '';
        }));

        // If user already has profileImage that matches gallery, preselect it
        (function preselect() {
          const current = "<%= (user && user.profileImage) ? user.profileImage : '' %>";
          if (!current) return;
          thumbs.forEach(t => {
            const imgEl = t.querySelector('img');
            if (!imgEl) return;
            if (imgEl.src.endsWith(current) || imgEl.src.includes(current)) {
              t.classList.add('selected');
              input.value = t.getAttribute('data-id');
            }
          });
        })();
      })();

      async function submitProfile(form) {
        const fd = new FormData(form);
        const res = await fetch('/api/users/profile', {
          method: 'PATCH',
          body: fd,
          credentials: 'same-origin'
        });
        if (res.ok) window.location.reload();
        else {
          const data = await res.json().catch(() => null);
          alert(data?.error || 'Update failed');
        }
      }

      document.getElementById('deleteProfileBtn')?.addEventListener('click', async () => {
        if (!confirm('คุณแน่ใจหรือไม่ว่าต้องการลบโปรไฟล์นี้? การลบจะไม่สามารถย้อนกลับได้')) return;
        try {
          const res = await fetch('/api/users/profile', {
            method: 'DELETE',
            credentials: 'same-origin',
            headers: { 'Accept': 'application/json' }
          });
          const data = await res.json().catch(() => null);
          if (res.ok) {
            window.location = '/login';
            return;
          }
          console.error('delete profile failed', res.status, data);
          alert(data?.error || 'Delete failed');
        } catch (err) {
          console.error('delete profile network error', err);
          alert('Network error');
        }
      });
    </script>
</body>

</html>